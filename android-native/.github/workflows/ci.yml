name: CI

on:
  push:
    branches: [ master, develop, release/* ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      with:
        gradle-home-cache-cleanup: true

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run unit tests
      run: ./gradlew testDebugUnitTest

    - name: Generate test report
      run: ./gradlew jacocoTestReport

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          app/build/reports/tests/
          app/build/reports/jacoco/

    - name: Comment test results on PR
      uses: mikepenz/action-junit-report@v4
      if: github.event_name == 'pull_request'
      with:
        report_paths: '**/build/test-results/test*UnitTest/TEST-*.xml'
        check_name: 'Unit Test Results'

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run ktlint
      run: ./gradlew ktlintCheck

    - name: Run detekt
      run: ./gradlew detekt

    - name: Run Android lint
      run: ./gradlew lint

    - name: Upload lint results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results
        path: |
          app/build/reports/lint-results-*.html
          app/build/reports/detekt/
          app/build/reports/ktlint/

  build:
    name: Build APKs
    runs-on: ubuntu-latest
    timeout-minutes: 45
    needs: [test, lint]

    strategy:
      matrix:
        variant: [freeDebug, proDebug, betaDebug]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build ${{ matrix.variant }} APK
      run: ./gradlew assemble${{ matrix.variant }}

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: apk-${{ matrix.variant }}
        path: app/build/outputs/apk/

  instrumented-tests:
    name: Instrumented Tests
    runs-on: macos-latest
    timeout-minutes: 60
    needs: [test, lint]

    strategy:
      matrix:
        api-level: [23, 29, 34]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: AVD cache
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ matrix.api-level }}

    - name: Create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."

    - name: Run instrumented tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: ./gradlew connectedDebugAndroidTest

    - name: Upload instrumented test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: instrumented-test-results-api-${{ matrix.api-level }}
        path: app/build/reports/androidTests/

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [test, lint]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run benchmarks
      run: ./gradlew :app:connectedBenchmarkAndroidTest

    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: benchmark-results
        path: app/build/reports/benchmark/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run dependency vulnerability scan
      uses: ossf/scorecard-action@v2.3.1
      with:
        results_file: results.sarif
        results_format: sarif
        publish_results: true

    - name: Upload SARIF results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif