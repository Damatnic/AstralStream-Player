name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.16.0'
  JAVA_VERSION: '11'

jobs:
  # Code Quality and Tests
  test:
    name: Test & Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        working-directory: apps/mobile
        run: flutter pub get

      - name: Analyze code
        working-directory: apps/mobile
        run: flutter analyze

      - name: Run tests
        working-directory: apps/mobile
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: apps/mobile/coverage/lcov.info
          flags: flutter

  # Build APK
  build-apk:
    name: Build APK
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        working-directory: apps/mobile
        run: flutter pub get

      - name: Build APK
        working-directory: apps/mobile
        run: flutter build apk --release --split-per-abi

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v3
        with:
          name: apk-release
          path: apps/mobile/build/app/outputs/flutter-apk/*.apk

  # Build App Bundle
  build-bundle:
    name: Build App Bundle
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        working-directory: apps/mobile
        run: flutter pub get

      - name: Build App Bundle
        working-directory: apps/mobile
        run: flutter build appbundle --release

      - name: Upload App Bundle
        uses: actions/upload-artifact@v3
        with:
          name: appbundle-release
          path: apps/mobile/build/app/outputs/bundle/release/*.aab

  # Release
  release:
    name: Create Release
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [build-apk, build-bundle]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK artifacts
        uses: actions/download-artifact@v3
        with:
          name: apk-release
          path: apks

      - name: Download App Bundle
        uses: actions/download-artifact@v3
        with:
          name: appbundle-release
          path: bundle

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "apks/*.apk,bundle/*.aab"
          generateReleaseNotes: true
          draft: false
          prerelease: false
          tag: v${{ github.run_number }}
          name: Release v${{ github.run_number }}